query the movies collection to
1. get all documents
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.find().pretty()

2. get all documents with writer set to "Quentin Tarantino"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.find({writer:"Quentin Tarantino"}).pretty()

3. get all documents where actors include "Brad Pitt"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.find({actors:"Brad Pitt"}).pretty()

4. get all documents with franchise set to "The Hobbit"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.find({franchise:"The Hobbit"}).pretty()

5. get all movies released in the 90s
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.find({$and: [{year: {$gt:1899}},{year:{$lt:2000}}]}).pretty()

6. get all movies released before the year 2000 or after 2010
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.find({$or: [{year: {$gt:2010}},{year:{$lt:2000}}]}).pretty()

Update Documents
1. add a synopsis to "The Hobbit: An Unexpected Journey" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.update({title:"The Hobbit: An Unexpected Journey"},{$set:{synopsis:"A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."}})

2. add a synopsis to "The Hobbit: The Desolation of Smaug" : "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.update({title:"The Hobbit: The Desolation of Smaug"},{$set:{synopsis:"The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."}})

3. add an actor named "Samuel L. Jackson" to the movie "Pulp Fiction"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.findOneAndUpdate({title:"Pulp Fiction"},{$push:{actors:"Samuel L. Jackson"}})

Text Search
1. find all movies that have a synopsis that contains the word "Bilbo"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.find({$text:{$search:"Bilbo"}}).pretty()

2. find all movies that have a synopsis that contains the word "Gandalf"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.find({$text:{$search:"Gandalf"}}).pretty()

3. find all movies that have a synopsis that contains the word "Bilbo" and not the word "Gandalf"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.find({$text:{$search:"Bilbo -Gandalf"}}).pretty()

4. find all movies that have a synopsis that contains the word "dwarves" or "hobbit"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.find({$text:{$search:"dwarves hobbit"}}).pretty()

5. find all movies that have a synopsis that contains the word "gold" and "dragon"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.find({$text:{$search:"gold dragon"}}).pretty()

Delete Documents
1. delete the movie "Pee Wee Herman's Big Adventure"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.remove({title:"Pee Wee Herman's Big Adventure"})

2. delete the movie "Avatar"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.movies.remove({title:"Avatar"})

Querying related collections
1. find all users
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.users.find().pretty()

2. find all posts
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.posts.find().pretty()

3. find all posts that was authored by "GoodGuyGreg"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.posts.find({username:"GoodGuyGreg"}).pretty()

4. find all posts that was authored by "ScumbagSteve"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.posts.find({username:"ScumbagSteve"}).pretty()

5. find all comments
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.comments.find().pretty()

6. find all comments that was authored by "GoodGuyGreg"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.posts.find(username:"GoodGuyGreg").pretty()

7. find all comments that was authored by "ScumbagSteve"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.posts.find(username:"ScumbagSteve").pretty()

8. find all comments belonging to the post "Reports a bug in your code"
MongoDB Enterprise atlas-7eyysa-shard-0:PRIMARY> db.comments.find({post:"5f95aab665416e5f4a64169b"}).pretty()